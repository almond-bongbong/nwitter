{"version":3,"sources":["contexts/CurrentUserContext.js","components/Navigation.js","components/Nweet.js","constants/firestore.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Router.js","components/App.js","config/firebase.js","index.js"],"names":["CurrentUserContext","createContext","CurrentUserProvider","children","useState","currentUser","setCurrentUser","Provider","value","useCurrentUser","useContext","Navigation","style","display","justifyContent","marginTop","to","marginRight","icon","faTwitter","color","size","marginLeft","flexDirection","alignItems","fontSize","faUser","name","Nweet","id","text","image","isOwner","isEditMode","setIsEditMode","newText","setNewText","onDeleteClick","a","window","confirm","firebase","storage","refFromURL","delete","firestore","doc","toggleEditMode","prev","submitUpdateNweet","e","preventDefault","update","className","onSubmit","type","placeholder","required","autoFocus","onChange","target","onClick","src","alt","width","height","faTrash","faPencilAlt","NweetFactory","nweet","setNweet","imageRef","useRef","previewImage","setPreviewImage","clearImage","current","event","file","files","data","createdAt","Date","now","createdBy","ref","child","uid","uuidv4","put","uploadResult","getDownloadURL","collection","add","maxLength","htmlFor","faPlus","accept","reader","FileReader","onloadend","finish","currentTarget","result","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","docs","map","n","key","Profile","auth","displayName","newDisplayName","setNewDisplayName","getMyNweets","useCallback","where","get","console","log","updateProfile","signOut","AuthForm","email","setEmail","password","setPassword","newAccountMode","setNewAccountMode","error","setError","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","marginBottom","faGoogle","faGithub","PrivateRouter","maxWidth","margin","exact","path","PublicRouter","from","Router","isLoggedIn","App","init","setInit","onAuthStateChanged","user","photo","photoURL","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d296805a.chunk.js","sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst CurrentUserContext = createContext(null);\n\nexport function CurrentUserProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState(null);\n\n  return (\n    <CurrentUserContext.Provider value={{ currentUser, setCurrentUser }}>\n      {children}\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport const useCurrentUser = () => useContext(CurrentUserContext);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\nfunction Navigation() {\n  const { currentUser } = useCurrentUser();\n\n  return (\n    <ul style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={'#04AAFF'} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {currentUser.name ? `${currentUser.name}의 Profile` : 'Profile'}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  );\n}\n\nexport default Navigation;\n","import React, { useState } from 'react';\nimport firebase from 'firebase/app';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPencilAlt, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { NWEETS_COLLECTION } from '../constants/firestore';\n\nfunction Nweet({ id, text, image, isOwner }) {\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [newText, setNewText] = useState(text || '');\n\n  const onDeleteClick = async () => {\n    if (window.confirm('Are you sure you want to delete this nweet?')) {\n      if (image) await firebase.storage().refFromURL(image).delete();\n      await firebase.firestore().doc(`${NWEETS_COLLECTION}/${id}`).delete();\n    }\n  };\n\n  const toggleEditMode = () => {\n    setIsEditMode((prev) => !prev);\n  };\n\n  const handleNewText = (e) => {\n    setNewText(e.target.value);\n  };\n\n  const submitUpdateNweet = async (e) => {\n    e.preventDefault();\n\n    await firebase.firestore().doc(`${NWEETS_COLLECTION}/${id}`).update({\n      text: newText,\n    });\n    setIsEditMode(false);\n  };\n\n  return (\n    <div className=\"nweet\">\n      {isEditMode ? (\n        <>\n          <form className=\"container nweetEdit\" onSubmit={submitUpdateNweet}>\n            <input\n              type=\"text\"\n              placeholder=\"Edit your nweet\"\n              value={newText}\n              required\n              autoFocus\n              onChange={handleNewText}\n              className=\"formInput\"\n            />\n            <input type=\"submit\" className=\"formBtn\" value=\"Update Nweet\" />\n          </form>\n          <span onClick={toggleEditMode} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{text}</h4>\n          {image && (\n            <img src={image} alt=\"\" style={{ width: 50, height: 50 }} />\n          )}\n          {isOwner && (\n            <div className=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditMode}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Nweet;\n","export const NWEETS_COLLECTION = 'nweets';\n","import React, { useRef, useState } from 'react';\nimport firebase from 'firebase/app';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { NWEETS_COLLECTION } from '../constants/firestore';\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\nfunction NweetFactory() {\n  const { currentUser } = useCurrentUser();\n  const [nweet, setNweet] = useState('');\n  const imageRef = useRef();\n  const [previewImage, setPreviewImage] = useState(null);\n\n  const clearImage = () => {\n    imageRef.current.value = null;\n    setPreviewImage(null);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!nweet) return;\n    const file = imageRef.current.files[0];\n    const data = {\n      text: nweet,\n      createdAt: Date.now(),\n      createdBy: currentUser.id,\n    };\n\n    if (file) {\n      const uploadResult = await firebase\n        .storage()\n        .ref()\n        .child(`${currentUser.uid}/${uuidv4()}`)\n        .put(file);\n      data.image = await uploadResult.ref.getDownloadURL();\n    }\n\n    await firebase.firestore().collection(NWEETS_COLLECTION).add(data);\n    setNweet('');\n    clearImage();\n  };\n\n  const onChange = (e) => {\n    setNweet(e.target.value);\n  };\n\n  const onChangeImage = (e) => {\n    const file = e.target.files?.[0] || null;\n\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = (finish) => {\n        setPreviewImage(finish.currentTarget.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        ref={imageRef}\n        onChange={onChangeImage}\n        style={{ opacity: 0 }}\n      />\n      {previewImage && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={previewImage}\n            style={{ backgroundImage: previewImage }}\n            alt=\"\"\n          />\n          <div className=\"factoryForm__clear\" onClick={clearImage}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n      <input type=\"submit\" value=\"Nweet\" />\n    </form>\n  );\n}\n\nexport default NweetFactory;\n","import React, { useEffect, useState } from 'react';\nimport { NWEETS_COLLECTION } from '../constants/firestore';\nimport firebase from 'firebase/app';\nimport Nweet from '../components/Nweet';\nimport NweetFactory from '../components/NweetFactory';\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\nfunction Home() {\n  const { currentUser } = useCurrentUser();\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    firebase\n      .firestore()\n      .collection(NWEETS_COLLECTION)\n      .orderBy('createdAt', 'desc')\n      .onSnapshot((snapshot) => {\n        const data = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setNweets(data);\n      });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NweetFactory />\n\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((n) => (\n          <Nweet\n            key={n.id}\n            id={n.id}\n            text={n.text}\n            image={n.image}\n            isOwner={currentUser?.id === n.createdBy}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport firebase from 'firebase/app';\nimport { NWEETS_COLLECTION } from '../constants/firestore';\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\nfunction Profile() {\n  const { currentUser, setCurrentUser } = useCurrentUser();\n  const [newDisplayName, setNewDisplayName] = useState(\n    firebase.auth().currentUser.displayName || ''\n  );\n\n  const getMyNweets = useCallback(async () => {\n    const data = await firebase\n      .firestore()\n      .collection(NWEETS_COLLECTION)\n      .where('createdBy', '==', firebase.auth().currentUser.uid)\n      .orderBy('createdAt', 'desc')\n      .get();\n    const nweets = data.docs.map((doc) => ({\n      id: doc.id,\n      ...doc.data(),\n    }));\n    console.log(nweets);\n  }, []);\n\n  useEffect(() => {\n    getMyNweets();\n  }, [getMyNweets]);\n\n  const onLogoutClick = () => {\n    firebase.auth().signOut();\n  };\n\n  const onChange = (e) => {\n    setNewDisplayName(e.target.value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    if (firebase.auth().currentUser.displayName !== newDisplayName) {\n      await firebase.auth().currentUser.updateProfile({\n        displayName: newDisplayName,\n      });\n      setCurrentUser({\n        ...currentUser,\n        name: newDisplayName,\n      });\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"Display name\"\n          className=\"formInput\"\n          autoFocus\n          value={newDisplayName}\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{ marginTop: 10 }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogoutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n}\n\nexport default Profile;\n","import React, { useState } from 'react';\nimport firebase from 'firebase/app';\n\nfunction AuthForm() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [newAccountMode, setNewAccountMode] = useState(false);\n  const [error, setError] = useState('');\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n\n  const toggleAccount = () => {\n    setNewAccountMode((prev) => !prev);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      if (newAccountMode) {\n        const data = await firebase\n          .auth()\n          .createUserWithEmailAndPassword(email, password);\n        console.log(data);\n      } else {\n        const data = await firebase\n          .auth()\n          .signInWithEmailAndPassword(email, password);\n        console.log(data);\n      }\n    } catch (e) {\n      console.log(e);\n      setError(e.message);\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          className=\"authInput\"\n          required\n          value={email}\n          onChange={onChange}\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          className=\"authInput\"\n          required\n          value={password}\n          onChange={onChange}\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccountMode ? 'Create Account' : 'Sign In'}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccountMode ? 'Sign In' : 'Create Account'}\n      </span>\n    </>\n  );\n}\n\nexport default AuthForm;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faGithub,\n  faGoogle,\n  faTwitter,\n} from '@fortawesome/free-brands-svg-icons';\nimport firebase from 'firebase/app';\nimport AuthForm from '../components/AuthForm';\n\nfunction Auth() {\n  const onSocialClick = async (e) => {\n    const { name } = e.target;\n    let provider;\n\n    if (name === 'google') {\n      provider = new firebase.auth.GoogleAuthProvider();\n    }\n    if (name === 'github') {\n      provider = new firebase.auth.GithubAuthProvider();\n    }\n\n    const result = await firebase.auth().signInWithPopup(provider);\n    console.log(result);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={'#04AAFF'}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button type=\"button\" onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button type=\"button\" onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Auth;\n","import React from 'react';\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport Navigation from './Navigation';\nimport Home from '../routes/Home';\nimport Profile from '../routes/Profile';\nimport Auth from '../routes/Auth';\n\nfunction Router({ isLoggedIn }) {\n  return (\n    <HashRouter>\n      {isLoggedIn && <Navigation />}\n      {isLoggedIn ? <PrivateRouter /> : <PublicRouter />}\n    </HashRouter>\n  );\n}\n\nconst PrivateRouter = () => (\n  <div\n    style={{\n      maxWidth: 890,\n      width: '100%',\n      margin: '0 auto',\n      marginTop: 80,\n      display: 'flex',\n      justifyContent: 'center',\n    }}\n  >\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route exact path=\"/profile\">\n        <Profile />\n      </Route>\n    </Switch>\n  </div>\n);\n\nconst PublicRouter = () => (\n  <>\n    <Route exact path=\"/\">\n      <Auth />\n    </Route>\n    <Redirect from=\"*\" to=\"/\" />\n  </>\n);\n\nexport default Router;\n","import React, { useEffect, useState } from 'react';\nimport firebase from 'firebase/app';\nimport Router from './Router';\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\nfunction App() {\n  const { currentUser, setCurrentUser } = useCurrentUser();\n  const [init, setInit] = useState(false);\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        setCurrentUser({\n          id: user.uid,\n          name: user.displayName,\n          photo: user.photoURL,\n        });\n      } else {\n        setCurrentUser(null);\n      }\n      setInit(true);\n    });\n  }, [setCurrentUser]);\n\n  return init ? (\n    <Router isLoggedIn={!!currentUser} currentUser={currentUser} />\n  ) : (\n    'Initializing...'\n  );\n}\n\nexport default App;\n","import { initializeApp } from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_APPKEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DB_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n};\n\ninitializeApp(firebaseConfig);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './components/App';\nimport './config/firebase';\nimport { CurrentUserProvider } from './contexts/CurrentUserContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CurrentUserProvider>\n      <App />\n    </CurrentUserProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}